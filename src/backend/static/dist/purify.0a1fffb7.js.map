{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A,yL,G,C,S,M,E,O,E;I,O,O,G;A,C,E,I,E,W;I;I,S,Q,G,E;Q;Q,O,U,c,O,U,Y,O,O,Q,G,S,G,E;Y,O,O;Q,I,S,G,E;Y,O,O,c,O,U,I,W,K,U,Q,O,S,G,W,O,G;Q,C,E,Q,I;I;I,S,gB,C,E,C,E;Q,kB,O,c,I,S,gB,C,E,C,E;Y,E,S,G;Y,O;Q;Q,O,gB,G;I;I,S,4B;Q,I,O,Y,e,C,Q,S,E,O,K;Q,I,Q,S,C,I,E,O,K;Q,I,O,U,Y,O,I;Q,I;Y,Q,S,C,O,C,I,C,Q,S,C,S,E,E,W,C;Y,O,I;Q,E,O,G;Y,O,K;Q;I;I,S,W,M,E,I,E,K,E;Q,I,6B,a,Q,S;a,a,S,W,M,E,I,E,K,E;Y,I,I;gB,I;a;Y,E,I,C,K,C,G;Y,I,c,S,I,C,K,C,Q;Y,I,W,I;Y,I,O,gB,U,M,S;Y,O;Q;Q,O,W,K,C,I,E;I;I,S,mB,G,E;Q,O,mB,Q,iB,Q,4B,Q;I;I,S,mB,G,E;Q,I,M,O,C,M,O,kB;I;I,S,iB,I,E;Q,I,O,W,e,I,C,O,Q,C,I,I,I,I,C,a,I,I,E,O,M,I,C;I;I,S,4B,C,E,M,E;Q,I,C,G;Q,I,O,M,U,O,kB,G;Q,I,I,O,S,C,Q,C,I,C,G,K,C,G;Q,I,M,Y,E,W,E,I,E,W,C,I;Q,I,M,S,M,O,O,M,I,C;Q,I,M,e,2C,I,C,I,O,kB,G;I;I,S,kB,G,E,G,E;Q,I,O,I,I,M,I,M,E,M,I,M;Q,I,I,I,G,O,I,M,M,I,K,I,I,C,E,G,G,C,E;Q,O;I;I,S,qB;Q,M,I,U,wI;I;ICAA,IACEA,iBAKEC,OALFD,cADF,EAEEE,iBAIED,OAJFC,cAFF,EAGEC,WAGEF,OAHFE,QAHF,EAIEC,iBAEEH,OAFFG,cAJF,EAKEC,2BACEJ,OADFI,wBALF;IAQA,IAAMC,SAAyBL,OAAzBK,MAAN,EAAcC,OAAiBN,OAAjBM,IAAd,EAAoBC,SAAWP,OAAXO,MAApB,EAAA,gDAAA;IACA,IAA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wB,GAAnB,MAAA;IAyHA,IAAM2D,QAAM3D,OAAO;QACxB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KA3CuB;IA8ClB,IAAM4D,aAAa5D,OAAO;QAC/B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KAxB8B,GAAzB,uDAAA;IA4BP,yDAAA;IACA,mDAAA;IACA,cAAA;IACO,IAAM6D,gBAAgB7D,OAAO;QAClC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KAvBiC;IA0B5B,IAAM8D,WAAS9D,OAAO;QAC3B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KA7B0B,GAArB,yDAAA;IAiCP,0CAAA;IACO,IAAM+D,mBAAmB/D,OAAO;QACrC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KAfoC;IAkB/B,IAAMgE,OAAOhE,OAAO;QAAC;KAAF;ICpRnB,IAAM0D,OAAO1D,OAAO;QACzwB;IAgHnB,IAAM2D,MAAM3D,OAAO;QACxtLuB;IAyLlB,IAAM8D,SAAS9D,OAAO;QAC3B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAC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","sources":["node_modules/dompurify/dist/purify.js","node_modules/dompurify/src/utils.js","node_modules/dompurify/src/tags.js","node_modules/dompurify/src/attrs.js","node_modules/dompurify/src/regexp.js","node_modules/dompurify/src/purify.js"],"sourcesContent":[null,"const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? (x) => x\n        : stringToLowerCase;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","construct","fun","thisValue","args","x","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","addToSet","set","array","l","length","element","lcElement","clone","object","newObject","property","lookupGetter","prop","desc","get","value","fallbackValue","console","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","_","createDOMPurify","DOMPurify","root","version","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","transformCaseFunc","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","hasChildNodes","firstElementChild","_basicCustomElementTest","childCount","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","undefined","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","shadowroot","serializedHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks"],"version":3,"file":"purify.0a1fffb7.js.map","sourceRoot":"../../"}